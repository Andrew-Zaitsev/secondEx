{"version":3,"sources":["../../assets/js/functions.js","../../modules/header-menu/header-menu.js","../headers-n-footers/headers-n-footers.js"],"names":["getNoun","number","nouns","Array","from","toString","pop","prettifyNumber","separator","replace","makeDropdown","dropdownClassName","dropdownButtonClassName","dropdownListClassName","needToHideButton","dropdowns","document","querySelectorAll","openedDropdown","toggleDropdown","currentDropdown","isDropdownClosed","showButton","closeDropdown","openDropdown","hideButton","event","stopPropagation","addEventListener","handleDocumentClick","removeEventListener","isClickInsideOpenedDropdownList","forEach","dropdown","button","querySelector","list","classList","add","contains","target","getComputedStyle","display","elem","remove"],"mappings":";AA0EC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,eAAA,QAAA,aAAA,EA1ED,IAAMA,EAAU,SAAVA,EAAWC,EAAQC,GACf,QAAA,GACAD,KAAW,IAAXA,EACGC,OAAAA,EAAM,GACRD,KAAAA,EAAS,GAAOA,EAAS,EACvBC,OAAAA,EAAM,GACTD,KAAW,IAAXA,EACCA,KAAAA,EAAS,GAAOA,EAAS,GACvBC,OAAAA,EAAM,GACf,QAESF,OAAAA,GADgBG,MAAMC,KAAKH,EAAOI,YAAYC,MACrBJ,KA+DrC,QAAA,QAAA,EA3DD,IAAMK,EAAiB,SAACN,GAAQO,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IACnCP,OAAAA,EAAOI,WAAWI,QAAQ,wBAAyBD,IAG5D,SAASE,EAAaC,EAAmBC,EAAyBC,EAAuBC,GAMjFC,IAAAA,EAAYC,SAASC,iBAAqBN,IAAAA,OAAAA,IAC5CO,EAAiB,KAYZC,SAAAA,EAAeC,GAClBC,EAAiBD,IACfF,IACEA,EAAeJ,kBAAkBQ,IACrCC,KAEFC,EAAaJ,GACTF,EAAeJ,kBAAkBW,IACrCC,MAAMC,kBACNX,SAASY,iBAAiB,QAASC,KAE/BX,EAAeJ,kBAAkBQ,IACrCC,IACAP,SAASc,oBAAoB,QAASD,IAIjCA,SAAAA,IACHE,MACJf,SAASc,oBAAoB,QAASD,GAClCX,EAAeJ,kBAAkBQ,IACrCC,KA/BFR,EAAUiB,QAAQ,SAAUC,GAC1BA,EAASC,OAASD,EAASE,cAAkBvB,IAAAA,OAAAA,IAC7CqB,EAASG,KAAOH,EAASE,cAAkBtB,IAAAA,OAAAA,IAC3CoB,EAASnB,iBAAmBA,EAC5BmB,EAASd,eAAiBA,EAE1Bc,EAASG,KAAKC,UAAUC,IAAOzB,GAAAA,OAAAA,EAA/B,YACAoB,EAASC,OAAON,iBAAiB,QAAS,WAAMK,OAAAA,EAASd,eAAec,OA2BpEF,IAAAA,EAAkC,WAAMb,OAAAA,EAAekB,KAAKG,SAASb,MAAMc,SAC3EnB,EAAmB,SAACY,GAAcQ,MAA4C,SAA5CA,iBAAiBR,EAASG,MAAMM,SAClEnB,EAAgB,WACpBL,EAAekB,KAAKC,UAAUC,IAAOzB,GAAAA,OAAAA,EAArC,YACAK,EAAiB,MAEbM,EAAe,SAACmB,GACpBA,EAAKP,KAAKC,UAAUO,OAAU/B,GAAAA,OAAAA,EAA9B,YACAK,EAAiByB,GAEbrB,EAAa,WAAMJ,OAAAA,EAAegB,OAAOG,UAAUO,OAAUhC,GAAAA,OAAAA,EAAhD,aACba,EAAa,WAAMP,OAAAA,EAAegB,OAAOG,UAAUC,IAAO1B,GAAAA,OAAAA,EAA7C,aACpB,QAAA,eAAA;;ACrED,aALA,IAAA,EAAA,QAAA,iCAIA,EAAa,EAAA,cAAA,cAAe,sBAAuB,qBAAqB,IACxE,EAAa,EAAA,cAAA,6BAA8B,0BAA2B;;ACLtE,aAAA,QAAA","file":"headers-n-footers.60fd5558.js","sourceRoot":"..\\src\\pages\\index","sourcesContent":["const getNoun = (number, nouns) => {\r\n  switch (true) {\r\n    case (number === 1):\r\n      return nouns[0];\r\n    case ((number > 1) && (number < 5)):\r\n      return nouns[1];\r\n    case (number === 0):\r\n    case ((number > 4) && (number < 21)):\r\n      return nouns[2];\r\n    default:\r\n      let numberLastDigit = +Array.from(number.toString()).pop();\r\n      return getNoun(numberLastDigit, nouns);\r\n  }\r\n};\r\n\r\nconst prettifyNumber = (number, separator = '\\u00A0') => {\r\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n}\r\n\r\nfunction makeDropdown(dropdownClassName, dropdownButtonClassName, dropdownListClassName, needToHideButton) {\r\n  //it is needed the button and the list of the dropdowns to have modifiers \"_hidden\" for hiding them \r\n  //dropdown module have to have such a structure:   |     dropdown\r\n  //                                                 |       dropdown__button\r\n  //                                                 |       dropdown__list\r\n\r\n  const dropdowns = document.querySelectorAll(`.${dropdownClassName}`);\r\n  let openedDropdown = null;\r\n\r\n  dropdowns.forEach(function (dropdown) {\r\n    dropdown.button = dropdown.querySelector(`.${dropdownButtonClassName}`);\r\n    dropdown.list = dropdown.querySelector(`.${dropdownListClassName}`);\r\n    dropdown.needToHideButton = needToHideButton;\r\n    dropdown.toggleDropdown = toggleDropdown;\r\n\r\n    dropdown.list.classList.add(`${dropdownListClassName}_hidden`);\r\n    dropdown.button.addEventListener('click', () => dropdown.toggleDropdown(dropdown));\r\n  });\r\n\r\n  function toggleDropdown(currentDropdown) {\r\n    if (isDropdownClosed(currentDropdown)) {\r\n      if (openedDropdown) {\r\n        if (openedDropdown.needToHideButton) showButton();\r\n        closeDropdown();\r\n      }\r\n      openDropdown(currentDropdown);\r\n      if (openedDropdown.needToHideButton) hideButton();\r\n      event.stopPropagation();\r\n      document.addEventListener('click', handleDocumentClick);\r\n    } else {\r\n      if (openedDropdown.needToHideButton) showButton();\r\n      closeDropdown();\r\n      document.removeEventListener('click', handleDocumentClick);\r\n    }\r\n  }\r\n\r\n  function handleDocumentClick() {\r\n    if (isClickInsideOpenedDropdownList()) return;\r\n    document.removeEventListener('click', handleDocumentClick);\r\n    if (openedDropdown.needToHideButton) showButton();\r\n    closeDropdown();\r\n  }\r\n\r\n  const isClickInsideOpenedDropdownList = () => openedDropdown.list.contains(event.target);\r\n  const isDropdownClosed = (dropdown) => (getComputedStyle(dropdown.list).display === 'none');\r\n  const closeDropdown = () => {\r\n    openedDropdown.list.classList.add(`${dropdownListClassName}_hidden`);\r\n    openedDropdown = null;\r\n  };\r\n  const openDropdown = (elem) => {\r\n    elem.list.classList.remove(`${dropdownListClassName}_hidden`);\r\n    openedDropdown = elem;\r\n  };\r\n  const showButton = () => openedDropdown.button.classList.remove(`${dropdownButtonClassName}_hidden`);\r\n  const hideButton = () => openedDropdown.button.classList.add(`${dropdownButtonClassName}_hidden`);\r\n}\r\n\r\nexport {\r\n  getNoun,\r\n  prettifyNumber,\r\n  makeDropdown,\r\n};","import {\r\n  makeDropdown\r\n} from '../../assets/js/functions.js';\r\n\r\nmakeDropdown('header-menu', 'header-menu__button', 'header-menu__list', true);\r\nmakeDropdown('header-menu__item_dropdown', 'header-menu__item-title', 'header-menu__dropdown');","import '../../modules/header-menu/header-menu.js';"]}